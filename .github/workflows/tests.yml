name: Unit Tests - DKM

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - opened
      - ready_for_review
      - reopened
      - synchronize

jobs:
  backend_api_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Install dependencies
        run: dotnet restore App/backend-api/Microsoft.GS.DPS.Tests/Microsoft.GS.DPS.Tests.csproj

      - name: Build Test Project
        run: dotnet build App/backend-api/Microsoft.GS.DPS.Tests/Microsoft.GS.DPS.Tests.csproj --no-restore

      - name: Check for test files
        id: check-tests
        run: |
          if [ ! -d "App/backend-api/Microsoft.GS.DPS.Tests" ] || [ -z "$(find App/backend-api/Microsoft.GS.DPS.Tests -name '*Test*.cs')" ]; then
            echo "No test files found."
            echo "tests-found=false" >> $GITHUB_ENV
          else
            echo "Test files found."
            echo "tests-found=true" >> $GITHUB_ENV
          fi

      - name: Run tests with coverage
        if: env.tests-found == 'true'
        run: |
          dotnet test App/backend-api/Microsoft.GS.DPS.Tests/Microsoft.GS.DPS.Tests.csproj \
            --collect:"XPlat Code Coverage" \
            --logger "trx;LogFileName=test_results.trx" \
            --results-directory "./TestResults" \
            --no-build \
            --verbosity normal
        env:
          DOTNET_CLI_TELEMETRY_OPTOUT: 1

  kernel_memory_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore and run tests for Kernel Memory with coverage
        working-directory: ./App/kernel-memory
        run: |
          if [ -f "KernelMemory.sln" ]; then
            dotnet restore KernelMemory.sln || echo "Warning: Some dependencies are missing. Proceeding."
            if dotnet test KernelMemory.sln --list-tests > /dev/null 2>&1; then
              dotnet test KernelMemory.sln --collect:"XPlat Code Coverage" --logger trx --results-directory TestResults || echo "Warning: Some tests may have failed."
            else
              echo "No test cases found in Kernel Memory. Skipping tests."
            fi
          else
            echo "No solution file found in Kernel Memory. Skipping tests."
          fi

      - name: Publish coverage results for Kernel Memory
        uses: actions/upload-artifact@v3
        with:
          name: kernel-memory-coverage
          path: ./App/kernel-memory/TestResults/CoverageReport

  frontend_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        working-directory: ./App/frontend-app
        run: |
          npm install --legacy-peer-deps || echo "Warning: Dependency installation failed. Proceeding."

      - name: Run tests for Frontend App with coverage
        working-directory: ./App/frontend-app
        run: |
          if find src -type f \( -name "*.test.tsx" -o -name "*.spec.tsx" -o -name "*.test.ts" -o -name "*.spec.ts" \) | grep -q .; then
            echo "Test files found. Proceeding with tests."
            npx jest --coverage --coverageDirectory=coverage --detectOpenHandles
          else
            echo "No test files found in Frontend App. Skipping tests."
          fi
